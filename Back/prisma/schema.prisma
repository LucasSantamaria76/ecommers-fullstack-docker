generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id       String         @id @default(cuid()) @db.VarChar(30)
  email    String         @unique @db.VarChar(50)
  password String         @db.VarChar
  role     ENUM_USER_ROLE
  profile  Profiles?
}

model Profiles {
  id        String   @id @default(cuid()) @db.VarChar(30)
  firstName String   @db.VarChar(25)
  lastName  String   @db.VarChar(20)
  city      String   @db.VarChar(20)
  province  String   @db.VarChar(20)
  adress    String   @db.VarChar(50)
  dni       String   @db.VarChar(8)
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)
  userId    String   @unique
  avatar    String   @default("https://png.pngtree.com/png-clipart/20210915/ourmid/pngtree-user-avatar-login-interface-abstract-blue-icon-png-image_3917504.jpg") @db.VarChar
  favorites String[] @db.VarChar
  user      Users    @relation(fields: [userId], references: [id])
}

model Products {
  id          String            @id @default(cuid()) @db.VarChar(30)
  description String            @db.VarChar(2000)
  price       Decimal           @db.Decimal(15, 2)
  stock       Int               @default(0)
  categoryId  String            @db.VarChar(30)
  title       String            @db.VarChar
  discount    Int               @default(0)
  photos      ImagesProduct[]
  feature     ProductFeature[]
  category    CategoryProduct   @relation(fields: [categoryId], references: [id])
  purchase    PurchaseProduct[]
}

model ImagesProduct {
  id        String   @id @default(cuid()) @db.VarChar(30)
  productId String   @db.VarChar(30)
  photo     String?  @db.VarChar
  product   Products @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model ProductFeature {
  id        String   @id(map: "productFeature_pkey") @default(cuid()) @db.VarChar(30)
  feature   String   @db.VarChar(100)
  productId String   @db.VarChar(30)
  product   Products @relation(fields: [productId], references: [id], onDelete: Cascade, map: "productFeature_productId_fkey")

  @@index([productId], map: "fki_productFeature_productId_fkey")
}

model CategoryProduct {
  id       String     @id @default(cuid()) @db.VarChar(30)
  name     String     @db.VarChar(25)
  products Products[]
}

model Purchase {
  id            String            @id @default(cuid()) @db.VarChar(30)
  status        String            @db.VarChar(15)
  paymentMethod String            @db.VarChar(15)
  createdAt     DateTime          @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime          @updatedAt @db.Timestamptz(6)
  products      PurchaseProduct[]
}

model PurchaseProduct {
  id              String   @id @default(cuid()) @db.VarChar(30)
  quantityProduct Int      @default(1)
  purchaseId      String   @db.VarChar(30)
  productId       String   @db.VarChar(30)
  product         Products @relation(fields: [productId], references: [id], onDelete: Cascade)
  purchase        Purchase @relation(fields: [purchaseId], references: [id], onDelete: Cascade)
}

enum ENUM_USER_ROLE {
  USER
  SELLER
  ADMIN
}
